x-common-config: &common-config
  logging:
    driver: 'json-file'
    options:
      max-size: '25m'
      max-file: '5'
  networks:
    - default

services:
  status:
    <<: *common-config
    build:
      context: status
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - $ROOT/server:/server
      - $ROOT/logs:/logs
    ports:
      - '${STATUS_PORT}:8080'
    environment:
      - PORT=8080
      - ARGON_CHAIN=${ARGON_CHAIN}
      - ARGON_ARCHIVE_NODE=${ARGON_ARCHIVE_NODE}
      - ARGON_LOCAL_NODE=http://argon-miner:9944
      - BITCOIN_RPC_URL=http://bitcoin:bitcoin@bitcoin-node:5000/
      - BITCOIN_CHAIN=${BITCOIN_CHAIN}
      - LOGS_DIR=/logs
    healthcheck:
      # yamllint disable-line rule:line-length
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8080/ | jq -e '.status == \"ok\"' > /dev/null || exit 1"]
      interval: 5s
      timeout: 3s
      start_period: 30s
      retries: 12

  bitcoin-data:
    <<: *common-config
    image: ghcr.io/argonprotocol/commander/${BITCOIN_DATA_SLUG}:latest
    platform: linux/amd64
    build:
      context: bitcoin-data
      dockerfile: Dockerfile
      args:
        - SNAPSHOT_HEIGHT=${SNAPSHOT_HEIGHT}
        - SNAPSHOT_NETWORK=${SNAPSHOT_NETWORK}
        - UTXO_HASH=${UTXO_HASH}
        - COMMIT_SHA=${COMMIT_SHA}
      tags:
        - ghcr.io/argonprotocol/commander/${BITCOIN_DATA_SLUG}:height-${SNAPSHOT_HEIGHT}
    volumes:
      - $BITCOIN_DATA_FOLDER:/data
    profiles:
      - data
    deploy:
      replicas: 1

  bitcoin-node:
    <<: *common-config
    restart: unless-stopped
    build:
      context: bitcoin
      dockerfile: Dockerfile
      args:
        - VERSION=${BITCOIN_VERSION}
    command:
      - /usr/local/bin/bitcoind
      - -conf=${BITCOIN_CONFIG}
      - --port=${BITCOIN_P2P_PORT}
    ports:
      - '${BITCOIN_P2P_PORT}:${BITCOIN_P2P_PORT}'
    environment:
      - BITCOIN_CONFIG=${BITCOIN_CONFIG}
      - BITCOIN_CHAIN=${BITCOIN_CHAIN}
    volumes:
      - $BITCOIN_DATA_FOLDER:/data
    depends_on:
      - status
    profiles:
      - all
      - miners
    healthcheck:
      test: >
        echo '{"jsonrpc":"1.0","id":"curltest","method":"getblockchaininfo","params":[]}' | curl --fail -s --user bitcoin:bitcoin -H "content-type: text/plain;" --data-binary @- http://localhost:5000/
      interval: 5s
      retries: 10

  argon-miner:
    <<: *common-config
    build:
      context: ./argon-miner
      dockerfile: Dockerfile
      args:
        - VERSION=${ARGON_VERSION}
    user: '${UID}:${GID}'
    restart: unless-stopped
    depends_on:
      - bitcoin-node
      - status
    command: >
      --bitcoin-rpc-url=http://bitcoin:bitcoin@bitcoin-node:5000
      --base-path=/data
      --no-mdns
      --no-telemetry
      --port=${ARGON_P2P_PORT}
      --rpc-port=9944
      --rpc-methods=unsafe
      --rpc-cors=all
      --unsafe-rpc-external
      --sync=fast
      --network-backend=libp2p
      --validator
      --notebook-archive-hosts=${NOTEBOOK_ARCHIVE_HOSTS}
      --chain=${ARGON_CHAIN}
      --detailed-log-output
      --name=argon-miner
      --state-pruning=256
      -linfo,pallet=trace,argon=trace,argon_notary_apis=info
      --node-key-file=/data/p2p.key
      --unsafe-force-node-key-generation
      --compute-miners=0
      ${ARGON_BOOTNODES:-}
    ports:
      - '${ARGON_P2P_PORT}:${ARGON_P2P_PORT}'
      - '${ARGON_RPC_PORT}:9944'
    environment:
      - ARGON_CHAIN=${ARGON_CHAIN}
      - ARGON_ARCHIVE_NODE=${ARGON_ARCHIVE_NODE}
    volumes:
      - $ARGON_DATA_FOLDER:/data
    profiles:
      - all
      - miners
    healthcheck:
      test:
        - CMD-SHELL
        - >
          curl -fsS -H 'Content-Type: application/json' \
            -d '{"id":1,"jsonrpc":"2.0","method":"system_health","params":[]}' \
            http://127.0.0.1:9944 | jq -e '.result.peers > 0' > /dev/null || exit 1
      interval: 5s
      timeout: 3s
      start_period: 30s
      retries: 12
  bot:
    <<: *common-config
    build:
      context: ./bot
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - argon-miner
      - status
    ports:
      - '${BOT_PORT}:8080'
    working_dir: /usr/src/app
    env_file:
      - ../config/.env.state
      - ../config/.env.security
    environment:
      - PORT=8080
      - BIDDING_RULES_PATH=/tmp/biddingRules.json
      - KEYPAIR_PATH=/tmp/walletMining.json
      - LOCAL_RPC_URL=ws://argon-miner:9944
      - ARCHIVE_NODE_URL=${ARGON_ARCHIVE_NODE}
      - STATUS_URL=http://status:8080
      - ARGON_CHAIN=${ARGON_CHAIN}
      - DATADIR=/data
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $ARGON_CONFIG_FOLDER/walletMining.json:/tmp/walletMining.json
      - $ARGON_CONFIG_FOLDER/biddingRules.json:/tmp/biddingRules.json
      - $ARGON_DATA_FOLDER:/data
    profiles:
      - all
      - bot

networks:
  default:
    driver: bridge
    external: true
    name: ${COMPOSE_PROJECT_NAME:-argon}-net
